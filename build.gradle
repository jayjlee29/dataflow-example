/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    //mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repository.apache.org/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

group = 'co.vible'
version = '1.0-SNAPSHOT'
sourceCompatibility='1.8'
targetCompatibility= '1.8'


dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

    
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-jdk14:1.7.25'
    implementation 'org.apache.beam:beam-sdks-java-core:2.24.0'
    implementation group: 'org.apache.beam', name: 'beam-runners-direct-java', version: '2.24.0'
    implementation group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version: '2.29.0'
    implementation group: 'com.google.apis', name: 'google-api-services-bigquery', version: 'v2-rev20191211-1.28.0'

}

application {
    // Define the main class for the application.
    mainClassName = 'co.vible.StarterPipeline'
}

jar {
    manifest {
        attributes 'Main-Class': 'co.vible.StarterPipeline'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }

        configurations.runtimeClasspath.collect { 
            it.isDirectory() ? it : zipTree(it) 
        }

    }
}


task execute (type:JavaExec) {
    main = System.getProperty("mainClass")
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
    args System.getProperty("exec.args", "").split()
}
